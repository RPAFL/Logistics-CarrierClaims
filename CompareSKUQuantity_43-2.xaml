<Activity mc:Ignorable="sap sap2010" x:Class="CompareSKUQuantity_43_2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_claimDetailsDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_TransactionItem" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_MainframeDataTable" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_Status" Type="InOutArgument(x:String)" />
    <x:Property Name="io_Remarks" Type="InOutArgument(x:String)" />
  </x:Members>
  <this:CompareSKUQuantity_43_2.in_MainframeDataTable>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:CompareSKUQuantity_43_2.in_MainframeDataTable>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2999,8396</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CompareSKUQuantity_43-2" sap:VirtualizedContainerService.HintSize="2959,8316" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="counterPositiveSKU" />
      <Variable x:TypeArguments="x:Int32" Name="counterNegativeSKU" />
      <Variable x:TypeArguments="x:String" Name="claimType" />
      <Variable x:TypeArguments="x:Int32" Name="shortCount" />
      <Variable x:TypeArguments="x:Int32" Name="noSkuMatchShortCounter" />
      <Variable x:TypeArguments="sd:DataTable" Name="filteredMainframeDataTable" />
      <Variable x:TypeArguments="x:String" Name="carton" />
      <Variable x:TypeArguments="x:Boolean" Name="isCartonExistsInMainframeFile" />
      <Variable x:TypeArguments="x:Int32" Name="noSkuAvailableManifestCounter" />
      <Variable x:TypeArguments="sd:DataTable" Name="filteredClaimDtNegativeSKU" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Data Scraping" sap:VirtualizedContainerService.HintSize="2937,8192" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[carton]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[io_TransactionItem("Carton").ToString.Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign- Check Carton Exists in Mainframe File" sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_36">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[isCartonExistsInMainframeFile]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[in_MainframeDataTable.AsEnumerable().Any(Function(x) x("Tracking Number").ToString.Trim = carton)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2915,93" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Checking Carton Number Exists in Mainframe File&quot;]" />
      <If sap2010:Annotation.AnnotationText="Check Carton Number Exist in Mainframe File, if it exits filter the Mainframe Data Table based on Carton Number. If Carton not exists in Mainframe file throw Exception." Condition="[isCartonExistsInMainframeFile]" DisplayName="If- Checking Carton Number exists in Mainframe file" sap:VirtualizedContainerService.HintSize="2915,629" sap2010:WorkflowViewState.IdRef="If_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="336,450" sap2010:WorkflowViewState.IdRef="Sequence_73">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Carton Number Exists in Mainframe File, Filtering the Mainframe file based on Carton Number&quot;]" />
            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_35">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[filteredMainframeDataTable]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[in_MainframeDataTable.Select("TRIM([Tracking Number])='"+carton+"'").CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Total Rows Mainframe Excel based on Carton Filter: &quot;+filteredMainframeDataTable.Rows.Count.ToString]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="336,479" sap2010:WorkflowViewState.IdRef="Sequence_74">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Mainframe File does not contains the Carton Number, Providing the Carton  Number in Exception List&quot;]" />
            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[io_Status]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Business Exception</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_38">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[io_Remarks]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["Carton Number is not available in Mainframe Excel File"]</InArgument>
              </Assign.Value>
            </Assign>
            <Throw Exception="[new BusinessRuleException(io_Status+&quot;,&quot;+io_Remarks)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
          </Sequence>
        </If.Else>
      </If>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[counterPositiveSKU]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Checking Negative/Positive SKU in Scrapped tatable from details popup of US Claim to decide the claim type as SHORT, OVER, OVer-SHORT.&#xA;If All the sku' are negative- SHORT 43-2 Claim Type.&#xA;If All the SKU's are Positive- OVER 43-2 Claim Type.&#xA;If Negative/Postive both SKU's available - OVER-SHORT 43-2 Claim Type." DataTable="[in_claimDetailsDT]" DisplayName="For Each Row Scrapped data table from us claim-item" sap:VirtualizedContainerService.HintSize="2915,607" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="575,458" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[CINT(row(&quot;Line Qty&quot;).ToString.Trim)&lt;0]" DisplayName="If- checking line quantity is negative" sap:VirtualizedContainerService.HintSize="553,334" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="264,184" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign- Negative SKU Count" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[counterNegativeSKU+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="264,184" sap2010:WorkflowViewState.IdRef="Sequence_26">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign- Positive SKu Count" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[counterPositiveSKU]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[counterPositiveSKU+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <If sap2010:Annotation.AnnotationText="Deciding the Claim type for 43-2 based on the conditions." Condition="[counterNegativeSKU=in_claimDetailsDT.Rows.Count]" DisplayName="If- Checking NegativeSKU count equals total sku count from us claim" sap:VirtualizedContainerService.HintSize="2915,741" sap2010:WorkflowViewState.IdRef="If_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="336,317" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[claimType]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Short</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Short&quot;]" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="719,591" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[counterPositiveSKU=in_claimDetailsDT.Rows.Count]" DisplayName="If- Checking Positive SKU count equals total sku count from us claim" sap:VirtualizedContainerService.HintSize="697,467" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="336,317" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[claimType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Over</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Over&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="336,317" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[claimType]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Over-Short</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Over-Short&quot;]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign- total count of negative sku" sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[shortCount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_15">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[counterPositiveSKU]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[noSkuMatchShortCounter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="2915,60" sap2010:WorkflowViewState.IdRef="Assign_43">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[noSkuAvailableManifestCounter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[claimType.Equals(&quot;Over-Short&quot;)]" DisplayName="If- Filtering Scrapped Claim details based on negative SKU for Over-Short Claim 43-2" sap:VirtualizedContainerService.HintSize="2915,467" sap2010:WorkflowViewState.IdRef="If_30">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="336,317" sap2010:WorkflowViewState.IdRef="Sequence_89">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign- Filtered Claim data table based on Negative SKU" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_45">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[filteredClaimDtNegativeSKU]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[in_claimDetailsDT.Select("TRIM([Line Qty])&lt;0").CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Filtered Scrapped Claim datatable for sku based on Negative SKU's: &quot;+filteredClaimDtNegativeSKU.Rows.Count.ToString]" />
          </Sequence>
        </If.Then>
      </If>
      <If sap2010:Annotation.AnnotationText="If Claim is of Type OVER, No SKU comparison is done - Directly assign the claim.&#xA;Other than Over, we will do the SKU Comparison and based on the results allow/disallow code for SHORT and OVER-SHORT." Condition="[NOT claimType.Equals(&quot;Over&quot;)]" DisplayName="If- checking claim is not of Over Type" sap:VirtualizedContainerService.HintSize="2915,4431" sap2010:WorkflowViewState.IdRef="If_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Sequence- Checking Claim type for Short Or Over-Short" sap:VirtualizedContainerService.HintSize="2554,4281" sap2010:WorkflowViewState.IdRef="Sequence_22">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[claimType.Equals(&quot;Short&quot;)]" DisplayName="If- Check Claim Type for Short or Over-Short" sap:VirtualizedContainerService.HintSize="2532,2374" sap2010:WorkflowViewState.IdRef="If_29">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1334,2224" sap2010:WorkflowViewState.IdRef="Sequence_81">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1312,93" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Claim Type is Short 43-2&quot;]" />
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[in_claimDetailsDT]" DisplayName="For Each Row- Scrapped Datatable US Claims" sap:VirtualizedContainerService.HintSize="1312,1967" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="1282,1818" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1260,1694" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[filteredMainframeDataTable]" DisplayName="For Each Row- Filtered Mainframe Data table" sap:VirtualizedContainerService.HintSize="1238,1320" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="monarchSheet" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1208,1171" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Sequence- Claim Type Short" sap:VirtualizedContainerService.HintSize="1186,1047" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[string.IsNullOrEmpty(monarchSheet(&quot;sku&quot;).ToString.ToUpper.Trim)]" DisplayName="If- Null check for SKU in mainframe file" sap:VirtualizedContainerService.HintSize="1164,923" sap2010:WorkflowViewState.IdRef="If_23">
                                        <If.Then>
                                          <Assign DisplayName="Assign-Count for No SKU Exists in Mainframe File" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[noSkuAvailableManifestCounter]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[noSkuAvailableManifestCounter+1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[monarchSheet(&quot;sku&quot;).ToString.ToUpper.Trim.Equals(row(&quot;SKU&quot;).ToString.ToUpper.Trim)]" DisplayName="If- Compare SKU" sap:VirtualizedContainerService.HintSize="897,773" sap2010:WorkflowViewState.IdRef="If_19">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="772,623" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[NOT string.IsNullOrEmpty(monarchSheet(&quot;Ship Qty&quot;).ToString.ToUpper.Trim)]" DisplayName="If- Null Check Ship Quantity in Mainframe File" sap:VirtualizedContainerService.HintSize="750,499" sap2010:WorkflowViewState.IdRef="If_18">
                                                  <If.Then>
                                                    <If Condition="[(CInt(monarchSheet(&quot;Ship Qty&quot;).ToString.ToUpper.Trim).Equals((Math.Abs(CInt(row(&quot;Line Qty&quot;).ToString.ToUpper.Trim)))))]" DisplayName="If- Compare Ship/Line Quantity" sap:VirtualizedContainerService.HintSize="625,349" sap2010:WorkflowViewState.IdRef="If_17">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="264,184" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign- count for negative sku match" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[counterNegativeSKU+1]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="336,199" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:Comment sap:VirtualizedContainerService.HintSize="314,75" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Disabled 5 digit case Check for short 43-2 Claim Type, Exception" />
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                            <If Condition="[counterNegativeSKU=0]" DisplayName="If- check negative sku count is zero" sap:VirtualizedContainerService.HintSize="1238,210" sap2010:WorkflowViewState.IdRef="If_21">
                              <If.Then>
                                <Assign DisplayName="Assign- count of no sku match" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[noSkuMatchShortCounter]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[noSkuMatchShortCounter+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="1173,2209" sap2010:WorkflowViewState.IdRef="Sequence_88">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1151,93" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Claim Type is Over-Short 43-2&quot;]" />
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[filteredClaimDtNegativeSKU]" DisplayName="For Each Row- Scrapped Datatable US Claims" sap:VirtualizedContainerService.HintSize="1151,1952" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="1121,1803" sap2010:WorkflowViewState.IdRef="Sequence_87">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1099,1679" sap2010:WorkflowViewState.IdRef="Sequence_86">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[filteredMainframeDataTable]" DisplayName="For Each Row- Filtered Mainframe Data table" sap:VirtualizedContainerService.HintSize="1077,1305" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="monarchSheet" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1047,1156" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Sequence-OverShort Claim" sap:VirtualizedContainerService.HintSize="1025,1032" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[string.IsNullOrEmpty(monarchSheet(&quot;sku&quot;).ToString.ToUpper.Trim)]" DisplayName="If- Null Check SKU" sap:VirtualizedContainerService.HintSize="1003,908" sap2010:WorkflowViewState.IdRef="If_27">
                                        <If.Then>
                                          <Assign DisplayName="Assign- Count for No SKU Exists in Mainframe file" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[noSkuAvailableManifestCounter]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[noSkuAvailableManifestCounter+1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[monarchSheet(&quot;sku&quot;).ToString.ToUpper.Trim.Equals(row(&quot;SKU&quot;).ToString.ToUpper.Trim)]" DisplayName="If- Compare SKU" sap:VirtualizedContainerService.HintSize="736,758" sap2010:WorkflowViewState.IdRef="If_26">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="611,608" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[NOT string.IsNullOrEmpty(monarchSheet(&quot;Ship Qty&quot;).ToString.ToUpper.Trim)]" DisplayName="If- Null Check Ship/Line Quantity" sap:VirtualizedContainerService.HintSize="589,484" sap2010:WorkflowViewState.IdRef="If_25">
                                                  <If.Then>
                                                    <If Condition="[(CInt(monarchSheet(&quot;Ship Qty&quot;).ToString.ToUpper.Trim).Equals((Math.Abs(CInt(row(&quot;Line Qty&quot;).ToString.ToUpper.Trim)))))]" DisplayName="If-Compare Ship/Line Quantity" sap:VirtualizedContainerService.HintSize="464,334" sap2010:WorkflowViewState.IdRef="If_24">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="264,184" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign- Count for negative SKU" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[counterNegativeSKU+1]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                            <If Condition="[counterNegativeSKU=0]" DisplayName="If- check negative sku count is zero" sap:VirtualizedContainerService.HintSize="1077,210" sap2010:WorkflowViewState.IdRef="If_28">
                              <If.Then>
                                <Assign DisplayName="Assign- count of no sku match" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[noSkuMatchShortCounter]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[noSkuMatchShortCounter+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </Sequence>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2532,93" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;SKU Match Count: &quot;+ counterNegativeSKU.ToString]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="2532,93" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;NO SKU Match: &quot;+noSkuMatchShortCounter.ToString]" />
            <If Condition="[NOT claimType.Equals(&quot;Over-Short&quot;)]" DisplayName="If- Check Claim Type is not Over-Short" sap:VirtualizedContainerService.HintSize="2532,1177" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Then>
                <If Condition="[counterNegativeSKU=in_claimDetailsDT.Rows.Count AND counterNegativeSKU=filteredMainframeDataTable.Rows.Count]" DisplayName="If- Check Negative SKu count equals total sku count from Claim and negative sku count from Mainframe file" sap:VirtualizedContainerService.HintSize="1080,883" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Sequence-&quot;All SKUS Match, put it as an exception&quot;" sap:VirtualizedContainerService.HintSize="336,479" sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;All SKUS Match, put it as an exception&quot;]" />
                      <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[io_Status]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["Business Exception"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[io_Remarks]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["All SKU Quantity Matches"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Throw Exception="[new BusinessRuleException(io_Status+&quot;,&quot;+io_Remarks)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="719,733" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[noSkuAvailableManifestCounter=in_claimDetailsDT.Rows.Count]" DisplayName="If- check count of no sku exists equals to total sku count" sap:VirtualizedContainerService.HintSize="697,609" sap2010:WorkflowViewState.IdRef="If_15">
                        <If.Then>
                          <Sequence DisplayName="Sequence-&quot;NO SKU available in Manifest for SHORT 43-2 Claim, Disallow Code 75/05&quot;" sap:VirtualizedContainerService.HintSize="336,344" sap2010:WorkflowViewState.IdRef="Sequence_36">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;NO SKU available in Manifest for SHORT 43-2 Claim, Disallow Code 75/05&quot;]" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DisallowCodeShort43-2 workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="DisallowCodeShort43-2.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Status" />
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Remarks" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence- &quot;All SKU not matches for SHORT 43-2 Claim Type, Allow Code 52/34&quot;" sap:VirtualizedContainerService.HintSize="336,459" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;All SKU not matches for SHORT 43-2 Claim Type, Allow Code 52/34&quot;]" />
                            <ui:Comment sap:VirtualizedContainerService.HintSize="314,75" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Enabled Allow Code for SHORT 43-2 Claim  as All SKu Quantity not matching 100 percent" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AllowCode_Short workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="AllowCode_Short.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
                                <InOutArgument x:TypeArguments="x:String" x:Key="io_Status" />
                                <InOutArgument x:TypeArguments="x:String" x:Key="io_Remarks" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <If Condition="[counterNegativeSKU=shortCount]" DisplayName="If- Check count of Negative SKu equals total negative sku from Claims for Over-Short" sap:VirtualizedContainerService.HintSize="1080,1027" sap2010:WorkflowViewState.IdRef="If_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Sequence- &quot;All SKU Quantity matches for Short in Over-Short 43-2 Claim Type, Allow Code 62&quot;" sap:VirtualizedContainerService.HintSize="336,344" sap2010:WorkflowViewState.IdRef="Sequence_31">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;All SKU Quantity matches for Short in Over-Short 43-2 Claim Type, Allow Code 62&quot;]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AllowCode_OverShort workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="AllowCode_OverShort.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:String" x:Key="io_Status" />
                          <InOutArgument x:TypeArguments="x:String" x:Key="io_Remarks" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="719,877" sap2010:WorkflowViewState.IdRef="Sequence_33">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[noSkuAvailableManifestCounter=shortCount]" DisplayName="If- No sku Exists count equals count of total negative sku from us cliams" sap:VirtualizedContainerService.HintSize="697,753" sap2010:WorkflowViewState.IdRef="If_22">
                        <If.Then>
                          <Sequence DisplayName="Sequence- &quot;Short SKU not available in Manifest for OVER-SHORT 43-2 Claim, Exception&quot;" sap:VirtualizedContainerService.HintSize="336,479" sap2010:WorkflowViewState.IdRef="Sequence_78">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Short SKU not available in Manifest for OVER-SHORT 43-2 Claim, Exception&quot;]" />
                            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[io_Status]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Business Exception"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[io_Remarks]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Short SKU not available in Manfiest for Over-Short 43-2 claim"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Throw Exception="[new BusinessRuleException(io_Status+&quot;,&quot;+io_Remarks)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Sequence- &quot;All SKU Quantity not matches for short in Over-Short 43-2 claim&quot;" sap:VirtualizedContainerService.HintSize="336,603" sap2010:WorkflowViewState.IdRef="Sequence_80">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;All SKU Quantity not matches for short in Over-Short 43-2 claim&quot;]" />
                            <Sequence sap:VirtualizedContainerService.HintSize="314,346" sap2010:WorkflowViewState.IdRef="Sequence_79">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[io_Status]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["Business Exception"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[io_Remarks]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["All SKU Quantity not matches for short in Over-Short 43-2 claim"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Throw Exception="[new BusinessRuleException(io_Status+&quot;,&quot;+io_Remarks)]" sap:VirtualizedContainerService.HintSize="242,22" sap2010:WorkflowViewState.IdRef="Throw_9" />
                            </Sequence>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="2185,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counterNegativeSKU]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="2185,60" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counterPositiveSKU]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="2185,60" sap2010:WorkflowViewState.IdRef="Assign_33">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[shortCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="336,344" sap2010:WorkflowViewState.IdRef="Sequence_28">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Over 43-2 Claim Type - Not Checking SKU in Manifest, Allow Code For Over 55/37&quot;]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AllowCode_Over workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="AllowCode_Over.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_TransactionItem">[io_TransactionItem]</InOutArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="io_Status" />
                <InOutArgument x:TypeArguments="x:String" x:Key="io_Remarks" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
  </Sequence>
</Activity>